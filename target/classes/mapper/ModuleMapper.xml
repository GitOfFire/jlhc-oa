<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jlhc.oa.dao.ModuleMapper" >
  <resultMap id="BaseResultMap" type="com.jlhc.oa.dto.function.Module" >
    <id column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    module_id, module_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jlhc.oa.dto.function.example.ModuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jl_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jl_module
    where module_id = #{moduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jl_module
    where module_id = #{moduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jlhc.oa.dto.function.example.ModuleExample" >
    delete from jl_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jlhc.oa.dto.function.Module" useGeneratedKeys="true" keyProperty="id" >
    insert into jl_module (module_id, module_name)
    values (#{moduleId,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jlhc.oa.dto.function.Module" useGeneratedKeys="true" keyProperty="id" >
    insert into jl_module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="moduleName != null" >
        module_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jlhc.oa.dto.function.example.ModuleExample" resultType="java.lang.Integer" >
    select count(*) from jl_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jl_module
    <set >
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null" >
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jl_module
    set module_id = #{record.moduleId,jdbcType=INTEGER},
      module_name = #{record.moduleName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlhc.oa.dto.function.Module" >
    update jl_module
    <set >
      <if test="moduleName != null" >
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
    </set>
    where module_id = #{moduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlhc.oa.dto.function.Module" >
    update jl_module
    set module_name = #{moduleName,jdbcType=VARCHAR}
    where module_id = #{moduleId,jdbcType=INTEGER}
  </update>
  <!--去重名插入一条模块数据,其中第一条Select语句就是创建一个-->
  <insert id="insertSelectiveWhereNotExistTheName" parameterType="com.jlhc.oa.dto.function.Module">
    INSERT INTO jl_module (
      jl_module.module_name,
      jl_module.module_id
    )
    SELECT
      #{moduleName,jdbcType=VARCHAR},
      NULL
    FROM DUAL
    WHERE NOT EXISTS(
      SELECT
        module_name
      FROM
        jl_module
      WHERE module_name=#{moduleName,jdbcType=VARCHAR}
    );
  </insert>
</mapper>