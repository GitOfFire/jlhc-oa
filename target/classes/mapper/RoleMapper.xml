<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jlhc.oa.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.jlhc.oa.dto.role.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_group_id" property="roleGroupId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_createdtime" property="roleCreatedtime" jdbcType="TIMESTAMP" />
    <result column="role_description" property="roleDescription" jdbcType="VARCHAR" />
    <result column="role_datarange" property="roleDatarange" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_group_id, role_name, role_createdtime, role_description, role_datarange
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jlhc.oa.dto.role.example.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jl_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jl_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jl_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jlhc.oa.dto.role.example.RoleExample" >
    delete from jl_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jlhc.oa.dto.role.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into jl_role (role_id, role_group_id, role_name, 
      role_createdtime, role_description, role_datarange
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleGroupId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{roleCreatedtime,jdbcType=TIMESTAMP}, #{roleDescription,jdbcType=VARCHAR}, #{roleDatarange,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jlhc.oa.dto.role.Role" useGeneratedKeys="true" keyProperty="id" >
    insert into jl_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleGroupId != null" >
        role_group_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleCreatedtime != null" >
        role_createdtime,
      </if>
      <if test="roleDescription != null" >
        role_description,
      </if>
      <if test="roleDatarange != null" >
        role_datarange,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleGroupId != null" >
        #{roleGroupId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatedtime != null" >
        #{roleCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleDatarange != null" >
        #{roleDatarange,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jlhc.oa.dto.role.example.RoleExample" resultType="java.lang.Integer" >
    select count(*) from jl_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jl_role
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleGroupId != null" >
        role_group_id = #{record.roleGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCreatedtime != null" >
        role_createdtime = #{record.roleCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roleDescription != null" >
        role_description = #{record.roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDatarange != null" >
        role_datarange = #{record.roleDatarange,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jl_role
    set role_id = #{record.roleId,jdbcType=INTEGER},
      role_group_id = #{record.roleGroupId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_createdtime = #{record.roleCreatedtime,jdbcType=TIMESTAMP},
      role_description = #{record.roleDescription,jdbcType=VARCHAR},
      role_datarange = #{record.roleDatarange,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlhc.oa.dto.role.Role" >
    update jl_role
    <set >
      <if test="roleGroupId != null" >
        role_group_id = #{roleGroupId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatedtime != null" >
        role_createdtime = #{roleCreatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDescription != null" >
        role_description = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleDatarange != null" >
        role_datarange = #{roleDatarange,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlhc.oa.dto.role.Role" >
    update jl_role
    set role_group_id = #{roleGroupId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_createdtime = #{roleCreatedtime,jdbcType=TIMESTAMP},
      role_description = #{roleDescription,jdbcType=VARCHAR},
      role_datarange = #{roleDatarange,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <!--根据组ID查询角色-->
  <select id = "selectByGroupId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
      jl_role rol
    WHERE
      rol.role_group_id = #{role_group_id,jdbcType=INTEGER};
  </select>
    <!--根据用户Id查询角色-->
    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        r.role_id AS role_id,
        role_group_id,
        role_name, role_createdtime, role_description, role_datarange
        FROM
        jl_role r,
        jl_role_user ru
        WHERE
        ru.user_id=#{userId,jdbcType=INTEGER}
        AND
        r.role_id=ru.role_id;
    </select>
</mapper>